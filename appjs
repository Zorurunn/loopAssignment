// 1,2.  array sum, average
function sumAndAverageArray(arr) {
    let i = 0;
    let sum = 0;
    let average = 0;
    while (i < arr.length) {
        sum += arr[i];
        i++;
    }
    average = sum / 2;
    console.log(sum);
    console.log(average);
}
let arraydesu = [46, 1, 2, 3, 4, 5, 7, 8, 9, 15];
sumAndAverageArray(arraydesu);

// 3. a toonii b zereg
function zereg(num1, num2) {
    let result = 0, i = 0;
    for (i = 0; i < num2; i++) {
        if (i == 0) {
            result = num1;
        } else {
            result = (result * num1)
        }
    }
    return result;
}

console.log(zereg(2, 4));

// 4. array find max value 

function arrayMax(arr) {
    let max = 0;
    for (i = 0; i < arr.length; i++) {
        if (max <= arr[i]) {
            max = arr[i];
        }
    }
    return max;
}
console.log(arrayMax(arraydesu));
// 5.  string urvuu butsaah 
function urvuuStr(str) {
    let newString = "";
    for (i = 0; i < str.length; i++) {
        newString = newString + str[str.length - (i + 1)];
    }
    return newString;
}
console.log(urvuuStr('hello'));
// 6. String temdegt dawhardsan eseh

function checkUnique(str) {
    let checkStr = "", result = true;
    for (i = 0; i < str.length; i++) {
        if (i == 0) {
            checkStr += str[0];
        } else if (checkStr !== str[i]) {
            checkStr = str[i];
        } else {
            result = false;
        }
    }
    return result;
}
console.log(checkUnique("abss"));

// 7. massive ogtloltsol
function arrayInstrection(arr1, arr2) {
    let newArr = [];
    for (i = 0; i < arr1.length; i++) {
        for (j = 0; j < arr2.length; j++) {
            if (arr1[i] === arr2[j]) {
                newArr.push(arr1[i]);
            }
        }
    }
    return newArr;
}
const arr1 = [1, 2, 3, 4, 5, 6, 5, 1], arr2 = [7, 8, 9, 10, 1, 2, 5];
console.log(arrayInstrection(arr1, arr2));

// 8. * pyramid
function pyramid(num) {
    let od = "*";
    let space = " ", too = 0;
    for (i = 0; i < num; i++) {
        if (i == 0) {
            spaceNum = (num * 2) - (i + 1);
            too = 1;
            console.log(space.repeat(spaceNum) + od.repeat(too));
        } else {
            too = too + 2;
            spaceNum = (num * 2) - (i + 1);
            console.log(space.repeat(spaceNum) + od.repeat(too));
        }
    }
    return true;
}
pyramid(15);

// 9. toonii factorial
function factorial(num) {
    let factNum = 1;
    for (i = 1; i <= num; i++) {
        factNum = factNum * i;
    }
    return factNum;
}
console.log(factorial(5));

// 10. n too hurtelh tegsh too

function evenNumbers(num) {
    let arr = [];
    for (i = 0; i < num; i++) {
        if ((num - i) % 2 === 0) {
            arr.push(num - i);
        }
    }
    return arr;
}
console.log(evenNumbers(10));

// 11. falindrom true false
function falindrom(num) {
    let n = num;
    let arr = [];
    let result = true;
    while (n >= 1) {
        arr.push(n % 10);
        n = Math.trunc(n = n / 10);
    }
    for (i = 0; i < arr.length; i++) {
        if (arr[i] !== arr[arr.length - (i + 1)]) {
            result = false;
        }
    }
    return result;
}

console.log(falindrom(121));

// 12. Anhnii too mun eseh
function anhniiToo(num) {
    let result = true;
    for (i = 2; i < Math.floor(num / 2); i++) {
        if (num % i === 0) {
            result = false;
            break;
        }
    }
    return result;
}
console.log(anhniiToo(1313))

// 13. n too hurtelh buh anhnii too
function buhAnhniiToo(num) {
    let arr = [], res = true, save = 0;
    for (i = 0; i < num; i++) {
        save = num - i;
        if (save === 1) {
            res = true;
        } else {
            for (j = 2; j < Math.floor(save / 2); j++) {
                if (save % j === 0) {
                    res = false;
                    break;
                }
            }
        }

        if (res) {
            arr.push(save);
        }
        res = true;
    }
    return arr;
}
console.log(buhAnhniiToo(20))

// 14. n too hurtelh pifonach hewle 

function pifonach(num) {
    let arr = [0, 1];
    for (i = 0; i < num; i++) {


    }
}
// //引数に値を渡す
// sample(15, 32);